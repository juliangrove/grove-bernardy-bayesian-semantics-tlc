{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE TypeOperators #-}

module Examples.RSA where

import Algebra.Classes hiding (normalize)
import Prelude hiding (Monad(..), Num(..), Fractional(..))
import Models.Optimizer
import TLC.Terms
import TLC.Distributions


k :: γ ⊢ ((Context0 ⟶ 'R) ⟶ 'R)
k = uniform 0 1000
    ⋆ Lam (normal 68 3
            ⋆ Lam
           (observe' ((≥) `App` Var Get `App`  (Con (General (Incl 50)))) >>
           (observe' ((≥) `App` (Con (General (Incl 80))) `App`  Var Get) >>
            (η (Pair
                 (Pair
                  (Pair
                   (Pair
                    (Pair TT (≥))
                    (Var (Weaken Get)))
                   human)
                  (Lam (Var (Weaken Get))))
                 vlad)))))

makeUtts :: [γ ⊢ 'U] -> γ ⊢ (('U ⟶ 'R) ⟶ 'R)
makeUtts us = Lam $ foldr1 addi $ map (App (Var Get) . wkn) us
  where addi :: γ ⊢ 'R -> γ ⊢ 'R -> γ ⊢ 'R
        addi x y = (Con $ General Addi) `App` x `App` y


utts123 :: γ ⊢ (('U ⟶ 'R) ⟶ 'R)
utts123 = makeUtts [u 1, u 2, u 3]

utts'' :: γ ⊢ (('U ⟶ 'R) ⟶ 'R)
utts'' = uniform 50 80 ⋆ Lam (η (u' (Var Get)))

updctx :: γ ⊢ Context0 -> γ ⊢ ('R ⟶ Context0)
updctx k = Lam (Pair
                (Pair (Fst (Fst $ wkn k))
                 (Lam (Var (Weaken Get))))
                (π Get $ wkn k))

-- >>> interp (Con $ General $ Utt 1)
-- (height(v) ≥ θ)

-- | Pragmatic listener
l1 :: γ ⊢ ('U ⟶ (Context0 ⟶ 'R) ⟶ 'R)
l1 = Lam (k ⋆ Lam (
             factor' ((App (distr (App s1 (Var Get))) (Var (Weaken Get)))) >>
             η (Var Get)))

l1Distr :: γ ⊢ ('U ⟶ Context0 ⟶ 'R)
l1Distr = Lam (Lam (distr (l1 `App` Var (Weaken Get))) `App` Var Get)

-- | Pragmatic speaker
s1' :: Integer -> γ ⊢ (Context0 ⟶ ('U ⟶ 'R) ⟶ 'R)
s1' α = Lam (-- utts123
             utts''
             ⋆ Lam (
             factor'
             ((App (distr (App l0 (Var Get))) (Var (Weaken Get))) ^+ α) >>
             η (Var Get)))

s1 :: γ ⊢ (Context0 ⟶ ('U ⟶ 'R) ⟶ 'R)
s1 = s1' 1

s1Distr :: γ ⊢ (Context0 ⟶ 'U ⟶ 'R)
s1Distr = Lam (Lam (distr (s1 `App` Var (Weaken Get))) `App` Var Get)

-- | Literal listener
l0 :: γ ⊢ ('U ⟶ (Context0 ⟶ 'R) ⟶ 'R)
l0 = Lam (k ⋆ Lam (
             observe'
             (App (App (Con (General (Interp Z))) (Var (Weaken Get))) (Var Get)) >>
             η (Var Get)))

l0Distr :: γ ⊢ ('U ⟶ Context0 ⟶ 'R)
l0Distr = Lam (Lam (distr (l0 `App` Var (Weaken Get))) `App` Var Get)

-- l0DistrForFixedU2 :: γ ⊢ ('R ⟶ 'R)
-- l0DistrForFixedU2 = distr $ App l0 (u 2) ⋆ Lam (η (App (hmorph (height `App` vlad)) (Var Get)))

-- l1DistrForFixedU :: Int -> γ ⊢ ('R ⟶ 'R)
-- l1DistrForFixedU n = distr $ App l1 (u n) ⋆ Lam (η (App (hmorph (height `App` vlad)) (Var Get)))

test :: γ ⊢ ('R ⟶ 'R)
test = distr $ uniform 0 10 ⋆ Lam (uniform 0 10 ⋆ Lam (η ((Con (General Addi)) `App` (Var Get) `App` (Var (Weaken Get)))))

heightToCtx :: γ ⊢ ('R ⟶ Context0)
heightToCtx = Lam ((Pair
                    (Pair
                     (Pair
                      (Pair
                       (Pair TT (≥))
                       (Con (General (Incl 0))))
                      human)
                     (Lam (Var (Weaken Get))))
                    vlad))
  
toAtLeastHeight :: γ ⊢ ('R ⟶ 'U)
toAtLeastHeight = Con (General Utt')  

utilityl0 :: γ ⊢ ('R ⟶ 'R ⟶ 'R)
utilityl0 = Lam (Lam (l0Distr `App` (toAtLeastHeight `App` (Var (Weaken Get))) `App` (heightToCtx `App` Var Get)))

utilitys1 :: γ ⊢ ('R ⟶ 'R ⟶ 'R)
utilitys1 = Lam (Lam (s1Distr `App` (heightToCtx `App` Var Get) `App` (toAtLeastHeight `App` (Var (Weaken Get))) ))

utilityl1 :: γ ⊢ ('R ⟶ 'R ⟶ 'R)
utilityl1 = Lam (Lam (l1Distr `App` (toAtLeastHeight `App` (Var (Weaken Get))) `App` (heightToCtx `App` Var Get) ))

-- Lam (Lam (expectedValue $ k ⋆ Lam (η $ App (distr $ App s1 (App (updctx (Var Get)) (Var (Weaken (Weaken Get))))) (u' (Var (Weaken Get))))))

-- exp1 = Lam (App k $ Lam (App (utility 1) (App (updctx (Var Get)) (Var (Weaken Get)))))

-- exp2 = Lam (App k $ Lam (App (utility 2) (App (updctx (Var Get)) (Var (Weaken Get)))))

-- >>> maxima $ simplifyFun2 Z utilityl0
-- charfun(((50)) - x <= 0) * charfun(((-80)) + x <= 0) * charfun(-x + y <= 0) * (((((3 * sqrt(2 * %pi))^(-1) * (1/1000))*exp((((-2312/9))) + (((68/9)))*x + (((-1/18)))*x^2)))/(1)) / (charfun(((-80)) + y <= 0) * integrate(integrate(((((3 * sqrt(2 * %pi))^(-1) * (1/1000))*exp((((-2312/9))) + (((68/9)))*u + (((-1/18)))*u^2)))/(1), u, max(((50)), y), ((80))), z, 0, ((1000))))

-- >>> approximateIntegralsAny 8 $ simplifyFun2 Z utilitys1
-- Cond (IsNegative {condExpr = Affine (50.0 :+ 0.0) (LinComb {fromLinComb = fromList [(There Here,(-1.0) :+ 0.0)]})}) (Cond (IsNegative {condExpr = Affine ((-80.0) :+ 0.0) (LinComb {fromLinComb = fromList [(There Here,1.0 :+ 0.0)]})}) (Cond (IsNegative {condExpr = Affine ((-80.0) :+ 0.0) (LinComb {fromLinComb = fromList [(Here,1.0 :+ 0.0)]})}) (Cond (IsNegative {condExpr = Affine (50.0 :+ 0.0) (LinComb {fromLinComb = fromList [(Here,(-1.0) :+ 0.0)]})}) (Cond (IsNegative {condExpr = Affine (0.0 :+ 0.0) (LinComb {fromLinComb = fromList [(Here,(-1.0) :+ 0.0),(There Here,1.0 :+ 0.0)]})}) (Div (Div (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-256.8888888888889) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},7.555555555555555 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.555555555555555e-2) :+ 0.0)]}))]}},4.432692004460363e-6 :+ 0.0)]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1.0 :+ 0.0)]}))]}})) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},2.8323857304737654e-5 :+ 0.0),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-256.8888888888889) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},7.555555555555555 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.555555555555555e-2) :+ 0.0)]}))]}},8.443222865638789e-2 :+ 0.0),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-234.3986432096956) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},6.9425524352499135 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.140711743910898e-2) :+ 0.0)]}))]}},0.777770684739406 :+ 4.130293990420969e-17),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-175.99551054765925) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},5.337958951149179 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.0475188366292984e-2) :+ 0.0)]}))]}},1.4860072243524263 :+ 0.0),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-104.1958590860313) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},3.3266854320608417 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-2.6552964918568126e-2) :+ 0.0)]}))]}},1.924060632265006 :+ (-4.130293990420969e-17)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-43.55555555555557) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1.5555555555555554 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-1.3888888888888885e-2) :+ 0.0)]}))]}},2.093919270678419 :+ 0.0),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-8.95020480849783) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},0.43529949863571904 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.292774231618703e-3) :+ 0.0)]}))]}},1.924060632265006 :+ (-4.130293990420969e-17)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.455292895775358) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-3.7870699279808295e-2) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-8.04767440375035e-5) :+ 0.0)]}))]}},0.777770684739406 :+ 4.130293990420969e-17),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.4894523408061104e-3) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.625617815846139e-3) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-1.1914783003736794e-3) :+ 0.0)]}))]}},1.4860072243524263 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-3.5404821630922066e-7) :+ (-0.0)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-256.8888888888889) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},7.555555555555555 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.555555555555555e-2) :+ 0.0)]}))]}},(-1.0554028582048488e-3) :+ (-0.0)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-234.3986432096956) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},6.9425524352499135 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.140711743910898e-2) :+ 0.0)]}))]}},(-9.722133559242575e-3) :+ (-5.162867488026212e-19)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-175.99551054765925) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},5.337958951149179 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.0475188366292984e-2) :+ 0.0)]}))]}},(-1.857509030440533e-2) :+ (-0.0)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-104.1958590860313) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},3.3266854320608417 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-2.6552964918568126e-2) :+ 0.0)]}))]}},(-2.4050757903312573e-2) :+ 5.162867488026212e-19),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-43.55555555555557) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1.5555555555555554 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-1.3888888888888885e-2) :+ 0.0)]}))]}},(-2.6173990883480238e-2) :+ (-0.0)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-8.95020480849783) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},0.43529949863571904 :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-5.292774231618703e-3) :+ 0.0)]}))]}},(-2.4050757903312573e-2) :+ 5.162867488026212e-19),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.455292895775358) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-3.7870699279808295e-2) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-8.04767440375035e-5) :+ 0.0)]}))]}},(-9.722133559242575e-3) :+ (-5.162867488026212e-19)),(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.4894523408061104e-3) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-4.625617815846139e-3) :+ 0.0)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},(-1.1914783003736794e-3) :+ 0.0)]}))]}},(-1.857509030440533e-2) :+ (-0.0))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1.0 :+ 0.0)]}))]}}))) (Ret (P {fromPoly = LinComb {fromLinComb = fromList []}} :/ P {fromPoly = LinComb {fromLinComb = fromList []}})))))))

-- >>> displayVs $ evalβ $ s1
-- (λx.(λy.Uniform(⟨50, 80⟩)(λz.((((Uniform(⟨0, 1000⟩)(λu.Normal(⟨68, 3⟩)(λv.(𝟙((v ≥ 50)) * (𝟙((80 ≥ v)) * (𝟙(⟦U(z)⟧(⟨⟨⟨⟨⟨⋄, (≥)⟩, u⟩, human⟩, (λw.v)⟩, v⟩)) * (⟨⟨⟨⟨⟨⋄, (≥)⟩, u⟩, human⟩, (λw.v)⟩, v⟩ ≐ x)))))) / Uniform(⟨0, 1000⟩)(λu.Normal(⟨68, 3⟩)(λv.(𝟙((v ≥ 50)) * (𝟙((80 ≥ v)) * (𝟙(⟦U(z)⟧(⟨⟨⟨⟨⟨⋄, (≥)⟩, u⟩, human⟩, (λw.v)⟩, v⟩)) * 1)))))) * 1) * 1) * y(U(z))))))

test1 :: P ((), Rat) Rat
test1 = simplifyFun Z $ distr $ App l0 (u' (Con (General (Incl 65)))) ⋆ Lam (η (App (hmorph Z (App height vlad)) (Var Get)))

-- >>> test1
-- Cond (IsNegative {condExpr = Affine 50 (LinComb {fromLinComb = fromList [(Here,-1)]})}) (Cond (IsNegative {condExpr = Affine (-80) (LinComb {fromLinComb = fromList [(Here,1)]})}) (Cond (IsNegative {condExpr = Affine 65 (LinComb {fromLinComb = fromList [(Here,-1)]})}) (Div (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 0 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 1000 (LinComb {fromLinComb = fromList []})]}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1)*(1/1000))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}}))) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 0 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 1000 (LinComb {fromLinComb = fromList []})]}) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 50 (LinComb {fromLinComb = fromList []}),Affine 65 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 80 (LinComb {fromLinComb = fromList []})]}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1)*(1/1000))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}})))))))
        
-- >>> simplifyFun Z $ distr $ App l0 (u' (Con (General (Incl 65)))) ⋆ Lam (η (App (hmorph Z (App height vlad)) (Var Get)))
-- Cond (IsNegative {condExpr = Affine 50 (LinComb {fromLinComb = fromList [(Here,-1)]})}) (Cond (IsNegative {condExpr = Affine (-80) (LinComb {fromLinComb = fromList [(Here,1)]})}) (Cond (IsNegative {condExpr = Affine 65 (LinComb {fromLinComb = fromList [(Here,-1)]})}) (Div (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 0 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 1000 (LinComb {fromLinComb = fromList []})]}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1)*(1/1000))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}}))) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 0 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 1000 (LinComb {fromLinComb = fromList []})]}) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 50 (LinComb {fromLinComb = fromList []}),Affine 65 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 80 (LinComb {fromLinComb = fromList []})]}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1)*(1/1000))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}})))))))

-- >>> displayVs $ clean Z $ evalβ $ subEq Z $ (Pair TT vlad) ≐ (Pair TT vlad)
-- 1

-- >>> :set -XAllowAmbiguousTypes
-- >>> :set -XTypeApplications
-- >>> :set -XDataKinds
-- >>> simplify Z $ expectedValue $ App l0 (u 1) ⋆ Lam (η (App (hmorph Z (App height vlad)) (Var Get)))
-- Div (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 0 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 80 (LinComb {fromLinComb = fromList []}),Affine 1000 (LinComb {fromLinComb = fromList []})]}) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 50 (LinComb {fromLinComb = fromList []}),Affine 0 (LinComb {fromLinComb = fromList [(Here,1)]})], domainHiBounds = [Affine 80 (LinComb {fromLinComb = fromList []})]}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1)*(1/1000))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}})))) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 0 (LinComb {fromLinComb = fromList []})], domainHiBounds = [Affine 80 (LinComb {fromLinComb = fromList []}),Affine 1000 (LinComb {fromLinComb = fromList []})]}) (Integrate (Domain {domainConditions = [], domainLoBounds = [Affine 50 (LinComb {fromLinComb = fromList []}),Affine 0 (LinComb {fromLinComb = fromList [(Here,1)]})], domainHiBounds = [Affine 80 (LinComb {fromLinComb = fromList []})]}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1)*(1/1000))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}}))))

-- >>> simplifyFun Z $ distr $ App l1 (u 1) ⋆ Lam (η (App (hmorph Z θ) (Var Get)))
-- Ret (P {fromPoly = LinComb {fromLinComb = fromList []}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}})

-- >>> simplifyFun Z $ distr $ normal 0 10 ⋆ Lam (normal 0 10 ⋆ Lam (η ((Var Get) + (Var (Weaken Get)))))
-- Div (Integrate (Domain {domainConditions = [], domainLoBounds = [], domainHiBounds = []}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1),(Vari (There Here),1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1/100)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/100)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/200)]}))]}},(10*(2*pi)^(1 % 2))^((-2) % 1))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}}))) (Integrate (Domain {domainConditions = [], domainLoBounds = [], domainHiBounds = []}) (Integrate (Domain {domainConditions = [], domainLoBounds = [], domainHiBounds = []}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/200)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari (There Here),2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/200)]}))]}},(10*(2*pi)^(1 % 2))^((-2) % 1))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}}))))

-- >>> :set -XAllowAmbiguousTypes
-- >>> :set -XTypeApplications
-- >>> :set -XDataKinds
-- >>> simplify Z $ evalβ $ measure $ normal 68 3
-- Integrate (Domain {domainConditions = [], domainLoBounds = [], domainHiBounds = []}) (Ret (P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-2312/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,1)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},68/9)]})),(M (Exponential {fromExponential = LinComb {fromLinComb = fromList [(Vari Here,2)]}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},-1/18)]}))]}},(3*(2*pi)^(1 % 2))^((-1) % 1))]}))]}} :/ P {fromPoly = LinComb {fromLinComb = fromList [(M (Exponential {fromExponential = LinComb {fromLinComb = fromList []}}),Coef (LinComb {fromLinComb = fromList [(P {fromPoly = LinComb {fromLinComb = fromList []}},1)]}))]}}))
